name: Deploy Release to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version"
        required: true

jobs:
  deploy_to_production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Yandex Cloud Container Registry
        run: |
          echo "${{ secrets.YANDEX_REGISTRY_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy Docker image to VM via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "${{ secrets.YANDEX_REGISTRY_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            docker pull cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
            echo "Список контейнеров:"
            docker ps
            docker stop $(docker ps -q) || true
            docker rm $(docker ps -a -q) || true
            docker run -d -p 3000:3000 cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: Find related issue
        id: find_issue
        run: |
          issue_number=$(gh issue list --search "Release ${{ github.event.inputs.release_version }}" --json number --jq '.[0].number')
          if [ -z "$issue_number" ]; then
            echo "No related issue found"
            exit 1
          fi
          echo "Found issue number: $issue_number"
          echo "ISSUE_NUMBER=$issue_number" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare comment body
        id: prepare_comment
        run: |
          comment="## Релиз выкачан в прод"
          comment+="**Дата:** $(date --utc +'%Y-%m-%dT%H:%M:%SZ')  "
          comment+="**Автор:** ${{ github.actor }}  "
          echo "$comment" > issue_comment.md
          echo "COMMENT_BODY=$(cat issue_comment.md)" >> $GITHUB_ENV

      - name: Add comment to GitHub issue
        run: |
          gh issue comment ${{ env.ISSUE_NUMBER }} -F issue_comment.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
