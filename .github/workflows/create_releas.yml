name: Create Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci

      - name: Run linter and tests
        run: |
          npm run lint
          npm run test

      - name: Create release branch
        run: |
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }} .
          docker tag cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }} cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }}_latest

      - name: Log in to Yandex Cloud Container Registry
        run: |
          docker login \
            --username oauth \
            --password "${{ secrets.YANDEX_REGISTRY_TOKEN }}" \
            cr.yandex

      - name: Push Docker image
        run: |
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }}_latest

      - name: Set up Git
        run: |
          git config --global user.email "you@yandex.ru"
          git config --global user.name "Tatiana"

      - name: Create tag for main branch
        run: |
          git tag v${{ github.run_number }} -m "Release version ${{ github.run_number }}"
          git push origin v${{ github.run_number }}

      - name: Get previous release tag
        id: get-previous-tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0 HEAD^1)"

      - name: Get commit messages since previous release
        id: get-commit-messages
        run: echo "::set-output name=commits::$(git log ${{ steps.get-previous-tag.outputs.tag }}..HEAD --pretty=format:'%h - %s (%an)')"

      - name: Create GitHub issue
        uses: peter-evans/create-issue-from-file@v2
        with:
          title: "Release ${{ github.run_number }}"
          content: |
            ## Release Details
            - **Date**: ${{ github.event.workflow_dispatch.created_at }}
            - **Author**: ${{ github.actor }}
            - **Version**: ${{ github.run_number }}
            - **Commits**:
            ${{ steps.get-commit-messages.outputs.commits }}
            - **Docker Image**: [cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }}](cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.run_number }})**

      - name: Update CHANGELOG.md
        run: |
          echo "## Version ${{ github.run_number }}" >> CHANGELOG.md
          echo $'\n' >> CHANGELOG.md
          echo "${{ steps.get-commit-messages.outputs.commits }}" >> CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for version ${{ github.run_number }}"
          git push origin HEAD
