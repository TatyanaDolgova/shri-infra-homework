name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version to fix"
        required: true

jobs:
  fix_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug - List all branches
        run: git branch -a

      - name: Debug - Fetch all branches
        run: git fetch --all

      - name: Checkout release branch
        run: git checkout releases/${{ github.event.inputs.release_version }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci

      - name: Run type check and tests
        run: |
          npm run lint
          npm run test

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .
          docker tag cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: Log in to Yandex Cloud Container Registry
        run: |
          docker login \
            --username oauth \
            --password "${{ secrets.YANDEX_REGISTRY_TOKEN }}" \
            cr.yandex

      - name: Push Docker image
        run: |
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: Set up Git
        run: |
          git config --global user.email "you@yandex.ru"
          git config --global user.name "Tatiana"

      - name: Create fix tag
        run: |
          git tag ${{ github.event.inputs.release_version }}-fix${{ github.run_number }}
          git push origin ${{ github.event.inputs.release_version }}-fix${{ github.run_number }}

      - name: Get previous release tag
        id: prev_tag
        run: echo "TAG=$(git describe --tags --abbrev=0 HEAD^)" >> $GITHUB_OUTPUT

      - name: Prepare comment body
        id: prepare_comment
        run: |
          echo "## Fix Release ${{ github.event.inputs.release_version }} Fix ${{ github.run_number }}" > issue_comment.md
          echo "- Date: $(date --utc +'%Y-%m-%dT%H:%M:%SZ')" >> issue_comment.md
          echo "- Author: ${{ github.actor }}" >> issue_comment.md
          echo "- Commits:" >> issue_comment.md
          git log ${{ steps.prev_tag.outputs.TAG }}..HEAD --pretty=format:"%h - %s" >> issue_comment.md
          echo "- Docker Image: cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}" >> issue_comment.md
          body=$(cat issue_comment.md | jq -R -s '.')
          echo "BODY=${body}" >> $GITHUB_OUTPUT

      - name: Find related issue
        id: find_issue
        run: |
          issue_number=$(gh issue list --search "Release ${{ github.event.inputs.release_version }}" --json number --jq '.[0].number')
          echo "Found issue number: $issue_number"
          echo "ISSUE_NUMBER=$issue_number" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment to GitHub issue
        run: |
          echo "Adding comment to issue number: $ISSUE_NUMBER"
          gh issue comment "$ISSUE_NUMBER" --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
